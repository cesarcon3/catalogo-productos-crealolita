---
import type { ProductProps } from './types';
import { loadProductImage } from './utils/imageLoader';
import { calculateUnitPrice } from './utils/priceCalculator';
import ProductBadges from './components/ProductBadges.astro';
import ProductImage from './components/ProductImage.astro';
import ProductTags from './components/ProductTags.astro';
import ProductPricing from './components/ProductPricing.astro';
import ProductActions from './components/ProductActions.astro';

export interface Props extends ProductProps {}

const { 
  id, 
  nombre, 
  precio, 
  moneda, 
  descripcion, 
  imagen, 
  destacado = false, 
  tags = [],
  ventaPor = 'docena',
  precioUnidad
} = Astro.props;

// Cargar imagen del producto
const imageImport = await loadProductImage(id, imagen);

// Calcular precio unitario
const precioMostrar = calculateUnitPrice(precio, ventaPor, precioUnidad);
---

<article class="product-card">
  <ProductBadges destacado={destacado} ventaPor={ventaPor} />
  
  <div class="image-wrapper">
    <ProductImage imageImport={imageImport} nombre={nombre} />
  </div>
  
  <div class="content">
    <h3>{nombre}</h3>
    <p class="description">{descripcion.substring(0, 100)}...</p>
    
    <ProductTags tags={tags} />
    
    <ProductPricing 
      precio={precio} 
      moneda={moneda} 
      ventaPor={ventaPor} 
      precioMostrar={precioMostrar}
    />
    
    <ProductActions id={id} nombre={nombre} />
  </div>
</article>

<style>
  .product-card {
    background: var(--white, #FFFFFF);
    border-radius: var(--radius-lg, 20px);
    overflow: hidden;
    box-shadow: var(--shadow, 0 2px 8px rgba(43, 25, 17, 0.1));
    transition: all 0.3s ease;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--beige, #F5E6D3);
  }
  
  .product-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg, 0 4px 16px rgba(43, 25, 17, 0.15));
    border-color: var(--gold-light, #DAA520);
  }
  
  .product-card:hover :global(.product-image.hover-effect) {
    transform: scale(1.05);
  }
  
  .image-wrapper {
    position: relative;
  }
  
  .content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .content h3 {
    font-family: 'Playfair Display', serif;
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--brown-dark, #2B1911);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }
  
  .description {
    color: var(--brown, #4A3426);
    font-size: 0.9rem;
    line-height: 1.6;
    margin-bottom: 0.75rem;
    flex: 1;
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    .content {
      padding: 1.25rem;
    }
  }
  
  @media (max-width: 640px) {
    .content {
      padding: 1rem;
    }
  }
  
  @media (max-width: 480px) {
    .content {
      padding: 0.875rem;
    }
  }
  
  @media (max-width: 360px) {
    .content {
      padding: 0.75rem;
    }
    
    .content h3 {
      font-size: 1.1rem;
    }
    
    .description {
      font-size: 0.85rem;
    }
  }
</style>